# Generated by Django 3.2.8 on 2022-06-05 06:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('userManagement', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(max_length=255)),
                ('fullName', models.CharField(max_length=255, null=True)),
                ('mobileNo', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('dob', models.CharField(max_length=255, null=True)),
                ('phoneNumberCountryCode', models.CharField(max_length=5, null=True)),
                ('age', models.CharField(max_length=10, null=True)),
                ('activityLevel', models.IntegerField(null=True)),
                ('height', models.CharField(max_length=10, null=True)),
                ('currentWeight', models.CharField(max_length=10, null=True)),
                ('goalWeight', models.CharField(max_length=10, null=True)),
                ('hobbies', models.TextField(null=True)),
                ('goals', models.TextField(null=True)),
                ('workoutPreferences', models.TextField(null=True)),
                ('dietaryPreferences', models.TextField(null=True)),
                ('zipCode', models.CharField(max_length=255)),
                ('isActive', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('isVerified', models.BooleanField(default=False)),
                ('deviceType', models.IntegerField(choices=[(1, 'Android'), (2, 'IOS')], null=True)),
                ('gender', models.IntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Transgender'), (4, 'Non-Binary'), (5, 'Prefer Not to Answer')], null=True)),
                ('deviceToken', models.CharField(max_length=255, null=True)),
                ('profileImage', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.FloatField(blank=True, default=0.0, null=True)),
                ('lng', models.FloatField(blank=True, default=0.0, null=True)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('isAvailable', models.BooleanField(default=False)),
                ('isApproved', models.IntegerField(choices=[(1, 'pending'), (2, 'approved'), (3, 'disapproved')], default=1)),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserWorkoutPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='UserWorkoutData', to=settings.AUTH_USER_MODEL)),
                ('workoutPreferencesId', models.ForeignKey(db_column='workoutPreferencesId', on_delete=django.db.models.deletion.CASCADE, related_name='WorkoutPreferenceData', to='userManagement.workoutpreferences')),
            ],
            options={
                'db_table': 'user_workout_preferences',
            },
        ),
        migrations.CreateModel(
            name='UserHobbies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobbyId', models.ForeignKey(db_column='hobbyId', on_delete=django.db.models.deletion.CASCADE, related_name='HobbyData', to='userManagement.hobbies')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='UserHobbyData', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_hobbies',
            },
        ),
        migrations.CreateModel(
            name='UserGoalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goalSettingsId', models.ForeignKey(db_column='goalSettingsId', on_delete=django.db.models.deletion.CASCADE, related_name='GoalSettingsData', to='userManagement.goalsettings')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='UserGoalData', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_goal_settings',
            },
        ),
        migrations.CreateModel(
            name='UserDietaryPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dietaryPreferencesId', models.ForeignKey(db_column='dietaryPreferencesId', on_delete=django.db.models.deletion.CASCADE, related_name='DietaryPreferencesData', to='userManagement.dietarypreferences')),
                ('userId', models.ForeignKey(db_column='userId', on_delete=django.db.models.deletion.CASCADE, related_name='UserDietaryData', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_dietary_preferences',
            },
        ),
    ]
